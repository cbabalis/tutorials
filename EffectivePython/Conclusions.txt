Lists:

Don't be verbose
    - no 0 for the start index
    - no length for the end index

Slicing is forgiving of start or end indexes.

Having two lists, assigning to a list slice will replace that range in the
original sequence (even if lengths are different).

#6
Use positive stride values in slices WITHOUT start/end indexes.
Avoid negative stride values.

Avoid using start, end and stride together in a slingle slice.

#7
Prefer list comprehensions than "map" and "filter" built-in functions

Dictionaries also support comprehension expressions.

#9
List comprehensions may cause probs for large inputs (memory)

Generator expressions avoid memory issues

Generator expressions can be composed by passing the iterator from one
generator expression intothe for subexpression of another

Generator expressions: very quick when chained together.

#10
Prefer enumerate over range

If needed, supply a second parameter to enumerate to specify the number from which to
begin counting

#11
The "zip" built-in function can be used to iterate over multiple iterators IN
PARALLEL.

Python3: zip is a generator which produces tuples
PYthon2: zip returns the full result as list of tuples

zip truncates its output SILENTLY if iterators have different lengths
